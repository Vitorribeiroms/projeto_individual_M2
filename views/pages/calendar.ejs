<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reserva de Salas</title>
    <link rel="stylesheet" href="/css/calendar.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="calendar-container">
        <div class="calendar-header">
            <h1>Reserva de Salas</h1>
            <div class="month-selector">
                <button id="prevMonth"><i class="fas fa-chevron-left"></i></button>
                <h2 id="currentMonth">Junho 2025</h2>
                <button id="nextMonth"><i class="fas fa-chevron-right"></i></button>
            </div>
        </div>

        <div class="calendar-grid">
            <div class="weekdays">
                <div>Dom</div>
                <div>Seg</div>
                <div>Ter</div>
                <div>Qua</div>
                <div>Qui</div>
                <div>Sex</div>
                <div>Sáb</div>
            </div>
            <div id="calendar-days" class="days">
                <!-- Days will be populated by JavaScript -->
            </div>
        </div>

        <div id="time-slots" class="time-slots hidden">
            <h3>Horários Disponíveis</h3>
            <div class="slots-container">
                <!-- Time slots will be populated by JavaScript -->
            </div>
        </div>

        <div id="reservation-summary" class="reservation-summary hidden">
            <h3>Resumo da Reserva</h3>
            <div class="summary-details">
                <p><strong>Data:</strong> <span id="selected-date"></span></p>
                <p><strong>Horário:</strong> <span id="selected-time"></span></p>
                <p><strong>Sala:</strong> <span id="selected-room"></span></p>
            </div>
            <div class="reservation-actions">
                <button id="confirm-reservation" class="btn-confirm">Confirmar Reserva</button>
                <button id="cancel-reservation" class="btn-cancel">Cancelar</button>
            </div>
        </div>
    </div>

    <div id="popup-confirm" class="popup-confirm hidden">
        <div class="popup-content">
            <h2>Reserva confirmada!</h2>
            <canvas id="confetti-canvas"></canvas>
            <button id="btn-voltar" class="btn-confirmar hidden">Voltar ao início</button>
        </div>
    </div>

    <style>
    .popup-confirm {
        position: fixed;
        top: 0; left: 0; right: 0; bottom: 0;
        background: rgba(0,0,0,0.25);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
    }
    .popup-confirm.hidden { display: none; }
    .popup-content {
        background: #fff;
        border-radius: 18px;
        box-shadow: 0 8px 32px rgba(0,0,0,0.18);
        padding: 2.5rem 2rem 2rem 2rem;
        text-align: center;
        min-width: 320px;
        position: relative;
    }
    .popup-content h2 {
        color: #4CAF50;
        font-size: 2rem;
        margin-bottom: 1.5rem;
        font-weight: 700;
    }
    #confetti-canvas {
        position: absolute;
        left: 0; top: 0; width: 100%; height: 100%;
        pointer-events: none;
        z-index: 1;
    }
    #btn-voltar {
        margin-top: 2.5rem;
        background: #FFB246;
        color: #fff;
        border: none;
        border-radius: 8px;
        font-size: 1.1rem;
        font-weight: 700;
        padding: 0.9rem 2.5rem;
        cursor: pointer;
        transition: background 0.2s, transform 0.2s;
        letter-spacing: 1px;
        box-shadow: 0 2px 8px rgba(255, 144, 70, 0.08);
        z-index: 2;
    }
    #btn-voltar:hover {
        background: #FF9046;
        transform: translateY(-2px) scale(1.04);
    }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Função para obter parâmetro da URL
            function getQueryParam(param) {
                const urlParams = new URLSearchParams(window.location.search);
                return urlParams.get(param);
            }

            const salaSelecionada = getQueryParam('sala') || 'Sala 101';
            const calendarDays = document.getElementById('calendar-days');
            const timeSlots = document.getElementById('time-slots');
            const reservationSummary = document.getElementById('reservation-summary');
            const selectedDateSpan = document.getElementById('selected-date');
            const selectedTimeSpan = document.getElementById('selected-time');
            const selectedRoomSpan = document.getElementById('selected-room');
            const currentMonthElement = document.getElementById('currentMonth');
            const prevMonthButton = document.getElementById('prevMonth');
            const nextMonthButton = document.getElementById('nextMonth');

            // Data inicial: 16 de Junho de 2025 (Segunda-feira)
            let currentDate = new Date(2025, 5, 16); // Mês é 0-based, então 5 = Junho

            // Nomes dos meses em português
            const monthNames = [
                'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',
                'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'
            ];

            // Sample available time slots
            const availableTimeSlots = [
                '08:00', '09:00', '10:00', '11:00', '14:00', '15:00', '16:00', '17:00'
            ];

            function updateCalendar() {
                const year = currentDate.getFullYear();
                const month = currentDate.getMonth();
                
                // Atualiza o título do mês
                currentMonthElement.textContent = `${monthNames[month]} ${year}`;

                // Limpa o calendário
                calendarDays.innerHTML = '';

                // Obtém o primeiro dia do mês
                const firstDay = new Date(year, month, 1);
                // Obtém o último dia do mês
                const lastDay = new Date(year, month + 1, 0);
                
                // Adiciona células vazias para os dias antes do primeiro dia do mês
                for (let i = 0; i < firstDay.getDay(); i++) {
                    const emptyDay = document.createElement('div');
                    emptyDay.className = 'day empty';
                    calendarDays.appendChild(emptyDay);
                }

                // Adiciona os dias do mês
                for (let day = 1; day <= lastDay.getDate(); day++) {
                    const dayElement = document.createElement('div');
                    dayElement.className = 'day';
                    dayElement.textContent = day;

                    // Desabilita dias anteriores à data atual
                    const currentDay = new Date(year, month, day);
                    if (currentDay < new Date(2025, 5, 16)) {
                        dayElement.classList.add('disabled');
                    } else {
                        dayElement.addEventListener('click', () => selectDate(day));
                    }

                    calendarDays.appendChild(dayElement);
                }
            }

            // Handle date selection
            function selectDate(day) {
                // Clear previous selections
                document.querySelectorAll('.day.selected').forEach(el => el.classList.remove('selected'));
                
                // Add selected class to clicked day
                event.target.classList.add('selected');
                
                // Show time slots
                timeSlots.classList.remove('hidden');
                reservationSummary.classList.add('hidden');
                
                // Populate time slots
                const slotsContainer = timeSlots.querySelector('.slots-container');
                slotsContainer.innerHTML = '';
                
                availableTimeSlots.forEach(time => {
                    const slot = document.createElement('div');
                    slot.className = 'time-slot';
                    slot.textContent = time;
                    slot.addEventListener('click', () => selectTimeSlot(day, time));
                    slotsContainer.appendChild(slot);
                });
            }

            // Handle time slot selection
            function selectTimeSlot(day, time) {
                // Clear previous selections
                document.querySelectorAll('.time-slot.selected').forEach(el => el.classList.remove('selected'));
                
                // Add selected class to clicked time slot
                event.target.classList.add('selected');
                
                // Show reservation summary
                reservationSummary.classList.remove('hidden');
                
                // Update summary details
                const month = currentDate.getMonth();
                const year = currentDate.getFullYear();
                selectedDateSpan.textContent = `${day}/${month + 1}/${year}`;
                selectedTimeSpan.textContent = time;
                selectedRoomSpan.textContent = salaSelecionada;
            }

            // Handle month navigation
            prevMonthButton.addEventListener('click', () => {
                currentDate.setMonth(currentDate.getMonth() - 1);
                updateCalendar();
            });

            nextMonthButton.addEventListener('click', () => {
                currentDate.setMonth(currentDate.getMonth() + 1);
                updateCalendar();
            });

            // Handle reservation confirmation
            document.getElementById('confirm-reservation').addEventListener('click', function() {
                // Exibe popup de confirmação
                document.getElementById('popup-confirm').classList.remove('hidden');
                startConfetti();
                setTimeout(() => {
                    document.getElementById('btn-voltar').classList.remove('hidden');
                }, 1800);
            });

            document.getElementById('btn-voltar').addEventListener('click', function() {
                window.location.href = '/';
            });

            // Confete simples em canvas
            function startConfetti() {
                const canvas = document.getElementById('confetti-canvas');
                const ctx = canvas.getContext('2d');
                let W = 320, H = 220;
                function resize() {
                    W = canvas.width = canvas.offsetWidth;
                    H = canvas.height = canvas.offsetHeight;
                }
                resize();
                window.addEventListener('resize', resize);
                const confettiColors = ['#FFB246','#FF9046','#4CAF50','#FFD700','#FF5E5E','#6EC1E4'];
                const confetti = Array.from({length: 40}, () => ({
                    x: Math.random()*W,
                    y: Math.random()*-H,
                    r: 6+Math.random()*8,
                    d: 2+Math.random()*2,
                    color: confettiColors[Math.floor(Math.random()*confettiColors.length)],
                    tilt: Math.random()*10-5
                }));
                let frame = 0;
                function draw() {
                    ctx.clearRect(0,0,W,H);
                    confetti.forEach(c => {
                        ctx.beginPath();
                        ctx.ellipse(c.x, c.y, c.r, c.r*0.5, c.tilt, 0, 2*Math.PI);
                        ctx.fillStyle = c.color;
                        ctx.fill();
                    });
                    update();
                }
                function update() {
                    frame++;
                    confetti.forEach(c => {
                        c.y += c.d;
                        c.x += Math.sin(frame/10 + c.tilt);
                        c.tilt += 0.02;
                        if (c.y > H+20) {
                            c.y = Math.random()*-20;
                            c.x = Math.random()*W;
                        }
                    });
                }
                let running = true;
                function animate() {
                    if (!running) return;
                    draw();
                    requestAnimationFrame(animate);
                }
                animate();
                setTimeout(()=>{running=false;ctx.clearRect(0,0,W,H);}, 2000);
            }

            // Handle reservation cancellation
            document.getElementById('cancel-reservation').addEventListener('click', function() {
                resetSelection();
            });

            // Reset selection
            function resetSelection() {
                document.querySelectorAll('.day.selected').forEach(el => el.classList.remove('selected'));
                document.querySelectorAll('.time-slot.selected').forEach(el => el.classList.remove('selected'));
                timeSlots.classList.add('hidden');
                reservationSummary.classList.add('hidden');
            }

            // Initialize calendar
            updateCalendar();
        });
    </script>
</body>
</html>
